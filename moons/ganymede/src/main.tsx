import React from 'react';
import ReactDOM from 'react-dom/client';

import Ganymede from './Ganymede';

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <Ganymede
      // width={1024}
      // height={768}
      parent={{
        id: 'parent-1',
        request(_, keys) {
          switch (keys[0]) {
            case 'tests.json':
              return [
                {
                  key: 'tests.json',
                  body: JSON.stringify([
                    {
                      text: 'Draw a square with any color',
                      data: { label: 'square' },
                    },
                    {
                      text: 'Draw a triangle with [](color://#ef4444)',
                      data: { label: 'triangle', color: '#ef4444' },
                    },
                  ]),
                },
              ];
            case 'ganymede.json':
              return [
                {
                  key: 'ganymede.json',
                  body: JSON.stringify({
                    color: '#ef4444',
                    paths: [
                      {
                        id: 'PPUFsZ3ae0mg_Rjq0oLbX',
                        color: '#000',
                        d: 'M545.32,327.70 Q553.37,351.42 557.33,371.20 T563.85,408.33 567.73,447.38 568.99,486.29 568.13,517.91 566.53,542.36 564.81,561.17 563.06,577.98 561.44,596.37 552.82,601.63 561.92,592.73 592.64,588.23 630.02,587.47 679.42,586.89 725.21,586.07 762.03,585.46 788.89,584.36 807.28,582.66 807.74,568.29 798.04,546.13 794.26,526.47 790.58,506.46 787.90,488.81 785.74,465.11 783.89,437.19 782.52,414.65 781.10,395.36 779.16,376.99 776.33,359.74 772.20,343.23 775.57,341.42 772.05,347.08 752.13,346.83 731.20,346.84 712.31,346.58 695.53,346.62 676.88,346.34 656.19,345.82 631.32,345.66 603.34,346.30 580.57,347.44 562.66,348.64 545.40,349.82 529.42,350.77 519.17,351.06 513.38,349.89 508.26,346.92 504.36,342.48 502.08,337.02 501.66,331.12 503.15,325.40 506.39,320.45 511.03,316.80 516.61,314.82 522.52,314.72 528.15,316.51 532.92,320.01 536.32,324.85 537.99,330.52 537.77,336.43 535.67,341.96 531.92,346.53 526.90,349.66 521.15,351.03 515.26,350.49 509.85,348.09 505.49,344.10 502.64,338.92 501.59,333.10 502.45,327.25 505.13,321.98 509.36,317.84 514.68,315.27 517.56,314.42 523.06,314.23 538.03,314.22 558.44,314.35 579.03,314.14 602.69,313.60 631.28,313.26 656.08,313.04 684.56,312.18 711.63,311.16 736.70,309.88 764.39,309.12 787.76,312.72 803.98,327.08 809.70,347.96 811.96,367.23 813.19,385.21 813.62,403.20 813.75,423.89 814.06,449.03 815.34,477.75 817.77,501.49 821.43,521.27 825.15,540.71 829.21,563.35 831.87,587.22 824.15,600.78 808.07,604.37 789.65,604.05 762.70,604.94 725.99,606.87 680.26,609.51 631.47,612.57 595.45,615.54 574.08,617.89 556.99,620.37 541.67,612.63 537.20,593.00 540.71,574.69 543.87,558.31 547.07,540.56 549.58,517.41 550.17,487.09 547.97,449.83 542.86,412.56 534.82,377.75 525.83,347.77 521.27,334.51 520.98,331.52 521.42,328.54 522.56,325.76 524.34,323.33 526.64,321.39 529.34,320.06 532.28,319.42 535.29,319.50 538.19,320.30 540.81,321.76 543.01,323.82 544.66,326.34 ',
                        prediction: {
                          label: 'square',
                          probability: 0.9999943971633911,
                        },
                      },
                    ],
                    n: 0,
                  }),
                },
              ];
          }
          return [];
        },
      }}
      data={{
        initial: {
          file: 'ganymede.json',
        },
        tests: {
          file: 'tests.json',
        },
        output: {
          file: 'ganymede.json',
          deimos: 'deimos.json',
        },
        // model: {
        //   type: 'onnx',
        //   urls: {
        //     modelUrl: 'https://raw.githubusercontent.com/brantem/adudu/master/mnist/mnist-12.onnx',
        //   },
        //   input: {
        //     width: 28,
        //     height: 28,
        //   },
        // },
        model: {
          type: 'teachable_machine',
          urls: {
            baseUrl: 'https://raw.githubusercontent.com/brantem/adudu/master/shapes',
          },
          input: {
            width: 96,
            height: 96,
            background: '#fff',
          },
          probability: {
            min: 90,
            max: 100,
          },
        },
      }}
      onChange={(files, points) => console.log(files, points)}
      debug
    />
  </React.StrictMode>,
);
